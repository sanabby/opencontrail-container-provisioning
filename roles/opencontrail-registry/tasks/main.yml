---
# This role installs httpd and registry, build opencontrail docker images and pushes
# the images to the registry
#
- name: install docker-py with pip
  become: true
  pip: name={{ item }} state=present
  with_items:
    - six==1.10.0
    - docker-py==1.2.3

- name: Create the contrail repo
  file: path={{ contrail_repo_dir }} state=directory mode=0755

- name: Download contrail packages
  get_url: dest={{ contrail_repo_dir }}  url={{ contrail_rel_pkgs }}
  when: contrail_rel_pkgs is defined

- name: Get downloaded file
  shell: ls *.tgz chdir={{ contrail_repo_dir }}
  register: contrail_pkg_tgz

- name: Create opencontrail repo directory packages
  file: path={{ contrail_repo_dir }}/{{ contrail_pkg_tgz.stdout.split('.tgz')[0] }} state=directory mode=0755

- name: Extract contrail packages
  unarchive: src={{ contrail_repo_dir }}/{{ contrail_pkg_tgz.stdout }} dest={{ contrail_repo_dir }}/{{ contrail_pkg_tgz.stdout.split('.tgz')[0] }}

- name: Delete the downloaded file
  file: path={{ contrail_repo_dir }}/{{ contrail_pkg_tgz.stdout }} state=absent

- name: httpd container
  docker:
    name: opencontrail-repo
    image: httpd
    net: host
    state: started
    volumes:
    - "{{ contrail_repo_dir }}:/usr/local/apache2/htdocs"

- name: Get docker uuid for apache
  shell: docker ps | grep httpd | awk '{print $1}'
  register: apache_docker_uuid

- name: Get apache conf
  shell: docker cp {{ apache_docker_uuid.stdout }}:/usr/local/apache2/conf/httpd.conf /tmp

- name: update apache config by inserting the alias for contrail repo
  blockinfile:
    dest: /tmp/httpd.conf
    insertafter: EOF
    content: |
      Alias /{{ contrail_pkg_tgz.stdout.split('.tgz')[0] }} /usr/local/apache2/htdocs/{{ contrail_pkg_tgz.stdout.split('.tgz')[0] }}
      <Directory /usr/local/apache2/htdocs/{{ contrail_pkg_tgz.stdout.split('.tgz')[0] }}>
          Options Indexes FollowSymLinks
          AllowOverride None
          Order allow,deny
          Allow from all
      </Directory>
    state: present

- name: copy apache config to container
  shell: docker cp /tmp/httpd.conf {{ apache_docker_uuid.stdout }}:/usr/local/apache2/conf/httpd.conf
  notify: restart apache
  tags: apache

- name: clean up local apache conf
  file: path=/tmp/httpd.conf state=absent

- name: Start ubuntu registry Packager
  command: "{{ item }}"
  with_items:
  - docker pull ubuntu:14.04
  - docker run -d -P --name opencontrail-registry-packagesz -v {{ contrail_repo_dir }}:/mnt -t -i ubuntu:14.04

- name: Get docker uuid of ubuntu registry packager
  shell: docker ps | grep opencontrail-registry-packagesz | awk '{print $1}'
  register: opencontrail_pkgz_docker_uuid

- name: create Packages.gz for the repo
  shell: docker exec -it {{ opencontrail_pkgz_docker_uuid.stdout }} bash -c "cd /mnt/{{ contrail_pkg_tgz.stdout.split('.tgz')[0] }}; dpkg-scanpackages . /dev/null | gzip -9c > Packages.gz"

- name: delete opencontrail-registry-packagesz
  command: "{{ item }}"
  with_items:
  - docker stop {{ opencontrail_pkgz_docker_uuid.stdout }}
  - docker rm {{ opencontrail_pkgz_docker_uuid.stdout }}

- name: docker registry
  docker:
    name: opencontrail-registry
    image: registry:2
    net: host
    state: started
    volumes:
    - "{{ contrail_repo_dir }}:/var/lib/registry"

- name: iptables Accept chain
  command: "{{ item }}"
  with_items:
  - iptables -P INPUT ACCEPT
  - iptables -P FORWARD ACCEPT
  - iptables -P OUTPUT ACCEPT 
  notify:
     - save iptables
     - restart iptables
  tags: iptables

- name: iptables flush
  command: "{{ item }}"
  with_items:
  - iptables -t nat -F
  - iptables -t mangle -F
  - iptables -F
  - iptables -X
  notify:
      - save iptables
      - restart iptables
  tags: iptables
